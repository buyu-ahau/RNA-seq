# -------------------------------------------------------------------------
# 最终火山图绘制脚本 (V6 - 正确标签逻辑 + 双色谱渐变)
# -------------------------------------------------------------------------

# --- 1. 环境准备 ---
rm(list = ls()) 
library(readr)
library(ggplot2)
library(ggrepel)
library(ggnewscale) # 用于实现双色谱

# --- 2. 读取与预处理数据 ---
new_filename <- "Con-vs-Mhp.DEseq2.before-filter.xls"
data <- read_tsv(new_filename)

data <- as.data.frame(data)
rownames(data) <- data$GeneID
data$log2FoldChange <- data$logFC
data$pvalue <- data$Pvalue
data <- data[!is.na(data$log2FoldChange) & !is.na(data$pvalue), ]

data$neg_log10_pvalue <- -log10(data$pvalue)
infinite_rows <- is.infinite(data$neg_log10_pvalue)
plot_data <- data[!infinite_rows, ]

# --- 3. 定义阈值并拆分数据 ---
logfc_threshold <- 1 
pvalue_threshold <- 0.05

data_ns <- subset(plot_data, abs(log2FoldChange) <= logfc_threshold | pvalue >= pvalue_threshold)
data_sig <- subset(plot_data, abs(log2FoldChange) > logfc_threshold & pvalue < pvalue_threshold)

data_up <- subset(data_sig, log2FoldChange > 0)
data_down <- subset(data_sig, log2FoldChange < 0)

# --- 4. 基因标签处理 (使用您验证过的正确逻辑) ---
# 找出 Top 20 显著基因
top_genes <- head(data_sig[order(data_sig$pvalue), ], 20)

# 创建初始标签列
plot_data$label <- NA
top_genes_indices <- which(rownames(plot_data) %in% rownames(top_genes))

# 核心逻辑：优先用 Gene_name, 如果为空则用 GeneID 作为备用
if("Gene_name" %in% colnames(plot_data)) {
  for (i in top_genes_indices) {
    if (!is.na(plot_data$Gene_name[i]) && plot_data$Gene_name[i] != "" && plot_data$Gene_name[i] != "-") {
      plot_data$label[i] <- plot_data$Gene_name[i]
    } else {
      # 使用 GeneID 作为备用方案
      plot_data$label[i] <- plot_data$GeneID[i] 
    }
  }
} else {
  # 如果没有 Gene_name 列，直接用 GeneID
  for (i in top_genes_indices) {
    plot_data$label[i] <- plot_data$GeneID[i]
  }
}

# 过滤掉不想显示的特定标签 (这部分逻辑保持不变)
patterns_to_remove <- "^novel\\.|^IGKV|^LOC|^IGHV|^IGHG"
labels_to_remove_indices <- which(grepl(patterns_to_remove, plot_data$label))
if(length(labels_to_remove_indices) > 0) {
  plot_data$label[labels_to_remove_indices] <- NA
}

# --- 5. 开始绘图 ---
p <- ggplot(plot_data, aes(x = log2FoldChange, y = neg_log10_pvalue)) +
  
  # 第1层: 不显著的点 (灰色)
  geom_point(data = data_ns, color = "grey", size = 1.2, alpha = 0.6, stroke = 0) +
  
  # 第2层: 下调的显著点 (蓝色系渐变)
  geom_point(data = data_down, aes(color = neg_log10_pvalue, size = neg_log10_pvalue), alpha = 0.8, stroke = 0) +
  scale_color_gradient(low = "#b5dbe6", high = "#333aab", name = "-log10(p-value) Down") +
  
  # 开始一个新的颜色标度
  new_scale_color() +
  
  # 第3层: 上调的显著点 (红色系渐变)
  geom_point(data = data_up, aes(color = neg_log10_pvalue, size = neg_log10_pvalue), alpha = 0.8, stroke = 0) +
  scale_color_gradient(low = "#fe8264", high = "#a73336", name = "-log10(p-value) Up") +

  # --- 其他设置 ---
  geom_vline(xintercept = c(-logfc_threshold, logfc_threshold), linetype = "dashed", color = "#999999") +
  geom_hline(yintercept = -log10(pvalue_threshold), linetype = "dashed", color = "#999999") +
  scale_size_continuous(range = c(1, 4)) +
  scale_y_continuous(expand = c(0, 0)) + 
  theme_bw() +
  theme(
    panel.grid = element_blank(),
    legend.position = "right",
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 14),
    plot.title = element_text(size = 16, hjust = 0.5)
  ) +
  guides(size = "none") + 
  geom_text_repel(
    data = subset(plot_data, !is.na(label)),
    aes(label = label),
    na.rm = TRUE,
    size = 3,
    color = "black", box.padding = 0.5, point.padding = 0.2, segment.color = 'grey50',
    segment.size = 0.4, force = 10, max.overlaps = Inf, min.segment.length = 0, seed = 123
  ) +
  xlab("Log2 Fold Change") +
  ylab("-log10(P-VALUE)") +
  ggtitle("Volcano Plot") +
  coord_cartesian(xlim = c(-12, 12), ylim = c(0, 320))

# --- 6. 显示并保存图片 ---
print(p)
# ggsave(...)
